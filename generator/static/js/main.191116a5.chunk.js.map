{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["StarWars","state","loadedCharacter","imageUrl","name","species","gender","randomNumber","Math","round","random","url","fetch","then","response","json","data","setState","image","this","className","src","alt","type","onClick","getNewCharacter","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAiBMA,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,iBAAiB,EACjBC,SAAU,KACVC,KAAM,KACNC,QAAS,KACTC,OAAQ,MAPE,E,mDAad,WAAmB,IAAD,OACVC,EAAeC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC/BC,EAAG,oDAAgDJ,GACzDK,MAAMD,GACHE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKC,SAAU,CACbd,SAAUa,EAAKE,MACfd,KAAMY,EAAKZ,KACXC,QAASW,EAAKX,QACdC,OAAQU,EAAKV,OAKbJ,iBAAiB,S,oBAKzB,WAAU,IAAD,OAIP,OACE,8BACE,gCAEEiB,KAAKlB,MAAMC,iBACX,sBAAKkB,UAAU,UAAf,UACE,4BAAG,qBAAKC,IAAKF,KAAKlB,MAAME,SAAUmB,IAAKH,KAAKlB,MAAMG,KAAMgB,UAAU,UAClE,6BAAKD,KAAKlB,MAAMG,OAChB,4BAAIe,KAAKlB,MAAMI,UACf,4BAAIc,KAAKlB,MAAMK,YAQnB,wBACEiB,KAAK,SACLC,QAAS,kBAAM,EAAKC,mBAAmBL,UAAU,MAFnD,0C,GAvDeM,IAAMC,WAiFdC,MAVf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SChFOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.191116a5.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\n// import Item from './MyItem'\n\n// class FilmItemRow extends React.Component {\n//   render() {\n//     return (\n//       <li>\n//         <a href={this.props.url}>{this.props.url}</a>\n//       </li>\n//     )\n//   }\n// }\n\nclass StarWars extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      loadedCharacter: false,\n      imageUrl: null,\n      name: null,\n      species: null,\n      gender: null,\n      // height: null,\n      // homeworld: null,\n      // films: [], \n    }\n  }\n  getNewCharacter() {\n    const randomNumber = Math.round(Math.random() * 671)\n    const url = `https://rickandmortyapi.com/api/character/${randomNumber}`\n    fetch(url) \n      .then(response => response.json())\n      .then(data => {\n        this.setState ({\n          imageUrl: data.image,\n          name: data.name,\n          species: data.species,\n          gender: data.gender,\n\n          // height: data.height,\n          // homeworld: data.homeworld,\n          // films: data.films, \n          loadedCharacter: true,\n        })\n      })\n    \n  }\n  render() {\n    // const movies = this.state.films.map((film, i) => {\n    //   return <FilmItemRow key={i} url={film} />\n    // })\n    return(\n      <div>\n        <div>\n        {\n          this.state.loadedCharacter &&\n          <div className=\"content\">\n            <p><img src={this.state.imageUrl} alt={this.state.name} className=\"img\" /></p>\n            <h1>{this.state.name}</h1>\n            <p>{this.state.species}</p>\n            <p>{this.state.gender}</p>\n            {/* <p><a href={this.state.homeworld}>Homeworld</a></p>\n            <ul>\n              {movies}\n            </ul> */}\n          </div>\n        }\n        \n        <button\n          type=\"button\" \n          onClick={() => this.getNewCharacter()} className=\"btn\"\n          >\n          Randomize Character\n        </button>\n        </div>\n        {/* <div className=\"bg-img\" style={{backgroundImage: `url(${this.state.imageUrl})`}}></div> */}\n      </div> \n    )\n\n  }\n}\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <StarWars />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}